Тема: Програмне забезпечення інформаційної системи компанії з страхування майна

Що потрібно зробити:
1)Реалізувати візуальне управління (Figma)
2)Реалізувати візуальне управління на сайт HTML,CSS
3)Реалізувати функціоналу
-------------------------------------------------------------------------------------
	Клієнт
1.1)	Реєстрація та Вхід:
•	Створення облікового запису.
•	Авторизація за допомогою електронної пошти, телефону або соціальних мереж.

2.1)	Розрахунок вартості страховки (онлайн-калькулятор):
•	Введення основної інформації про майно.
•	Розрахунок орієнтовної вартості страховки в режимі реального часу.
•	Порівняння різних пакетів страхування.

3.1)	Оформлення страховки онлайн:
•	Заповнення заявки на страхування.
•	Зручна форма для введення даних про майно.
•	Завантаження необхідних документів та фотографій.
•	Можливість обрати тип страховки (від цього залежатиме термін дії та її вартість)

4.1)	Перегляд та управління полісами:
•	Перегляд активних, минулих та майбутніх полісів.
•	Можливість продовження або зміни умов страхування.
•	Доступ до електронних копій полісів.

5.1)	Обробка страхових випадків:
•	Подання заявки на страхову виплату.
•	Завантаження фотографій та документів, що підтверджують страхову подію.
•	Перегляд статусу розгляду заявки.
6.1)	Оплата:
•	Різні способи оплати (кредитні картки, електронні гаманці, банківські перекази).


-------------------------------------------------------------------------------------
	Страховик(співробітник)
1.1)	Обробка заявок:
•	Прийом та обробка заявок на страхування.
•	Автоматичний розрахунок вартості полісів.
•	Верифікація документів та інформації, наданої клієнтами.

2.1)	Управління полісами:
•	Створення, редагування та анулювання страхових полісів.
•	Відстеження термінів дії полісів.
•	Перегляд історії полісів клієнтів.

3.1)	Обробка страхових випадків:
•	Прийом заявок на виплату страхових компенсацій.
•	Автоматизація процесу розгляду страхових випадків.
•	Ведення журналу виплат та відмов.

4.1)	Фінансове управління:
•	Облік платежів.
•	Управління рахунками та транзакціями.
•	Звіти про фінансову діяльність.
5.1)	Реєстрація та Вхід:
•	Створення облікового запису.
•	Авторизація за допомогою електронної пошти, телефону або соціальних мереж.







	   





Специфікація вимог до ПС 
Функціональні вимоги:
1.	Управління полісами
•	Система повинна дозволяти створювати, редагувати та видаляти страхові поліси для клієнтів.
•	Можливість автоматичного розрахунку вартості страхового поліса залежно від введених параметрів.
•	ПЗ повинно забезпечувати контроль термінів дії полісів та нагадування про їхнє продовження.
2.	Управління страховими випадками
•	Можливість реєстрації нових страхових випадків та призначення їх до відповідних клієнтів та полісів.
•	Система повинна надавати інструменти для ведення документації та обробки страхових випадків.
•	Можливість генерації звітів про страхові випадки за різними параметрами, такими як тип випадку, сума відшкодування, стан обробки тощо.
3.	Фінансовий облік полісів
•	Система повинна забезпечувати облік фінансових операцій, включаючи оплату полісів, виплати за страхові випадки та інші фінансові транзакції.
•	Можливість генерації фінансових звітів, включаючи звіти про прибутки, витрати, баланс компанії тощо.
Нефункціональні вимоги:
1.	Зручність використання: 
•	Інтерфейс користувача повинен бути інтуїтивно зрозумілим та зручним у використанні.
2.	Швидкодія: 
•	Система повинна мати прийнятний рівень відгуку, щоб забезпечити ефективну роботу користувачів.
3.	Безпека:
•	Система повинна забезпечувати захист даних клієнтів та конфіденційність інформації.
•	Повинна бути можливість аудиту доступу до даних та дій користувачів.
4.	Інтеграція: 
•	Система повинна бути здатна інтегруватися з іншими інформаційними системами компанії, такими як системи обліку та фінансового управління.
Обрані для реалізації функції: 
•	Управління полісами
•	Фінансовий облік полісів
Опис варіантів використання за А.Коберном
Таблиця 1:Управління полісами
Розділ	Опис
Назва	Управління полісами
Контекст використання	Управління страховими полісами клієнтів, включаючи оформлення, зміни та відшкодування збитків.
Зона дії	Інформаційна система страхової компанії.
Рівень	Функціональні можливості
Основна дійова особа	Працівник страхової компанії, який має доступ до системи управління полісами.
Учасники і інтереси	Співробітники компанії: бажають ефективно керувати страховими полісами та виплатами.
Клієнти: очікують швидких та точних виплат за умови настання страхового випадку.
Передумова	Наявність договору страхування між клієнтом і страховою компанією
Мінімальні гарантії	Захист персональних даних клієнтів, надійна робота системи 24/7, швидка реакція на запити клієнтів.
Гарантії успіху	Зручний та ефективний інтерфейс для користувачів; автоматизація процесів управління полісами; надійна робота системи в умовах високого навантаження.
Тригер	Запит на створення, модифікацію або перегляд полісу.
Основний сценарій	1.	Користувач (адміністратор або страховий агент) увійшовши в систему, обирає опцію "Управління полісами".
2.	Користувач обирає потрібний поліс або клієнта.
3.	Він може створювати нові поліси, змінювати умови існуючих, а також продовжувати або скасовувати поліси за згодою клієнта. Скасований поліс переноситься в архів.
4.	Після внесення необхідних змін користувач зберігає їх інформацію в системі.
5.	Система автоматично оновлює базу даних з усіма змінами.
Роширення	1)	Користувач спробував ввести некоректні дані під час оформлення полісу. 
•	Система автоматично виявляє некоректність введених даних. 
•	Система відображає повідомлення про помилку та надає рекомендації щодо виправлення даних.
2)	Користувач перевіряє та виправляє введені дані.
3)	Після виправлення даних користувач підтверджує їх.
4)	Система знову перевіряє коректність введених даних.
5)	Якщо дані введені правильно, система генерує поліс.
6)	Якщо помилок не виявлено, процес оформлення полісу завершується успішно.
Список змін в технології і в даних	Може включати оновлення програмного забезпечення для забезпечення безпеки та надійності, а також оновлення бази даних з новими типами страхових продуктів або змінами умов страхування.
Допоміжна інформація	Включає можливості підключення додаткових послуг, таких як онлайн-консультації з фахівцями зі страхування.
Таблиця 2: Фінансовий облік полісів
Розділ	Опис
Назва	Фінансовий облік полісів
Контекст використання	В сфері страхування майна, програмне забезпечення системи страхування майна потребує ефективного фінансового обліку полісів для забезпечення точності і надійності фінансової звітності.
Зона дії	Інформаційна система страхової компанії.
Рівень	Функціональні можливості
Основна дійова особа	Фахівець з фінансового обліку компанії зі страхування майна
Учасники і інтереси	Фахівець з фінансового обліку, адміністратори системи, керівництво компанії. Їх інтереси полягають у забезпеченні точності та ефективності обліку страхових полісів майна.
Передумова	Наявність програмного забезпечення системи страхування майна.
Мінімальні гарантії	Забезпечення цілісності, конфіденційності та доступності фінансових даних.
Гарантії успіху	Ефективне і точне ведення фінансового обліку полісів, забезпечення відповідності законодавству та внутрішнім правилам компанії.
Тригер	Оформлення нового страхового полісу майна або оновлення існуючого
Основний сценарій	1.	Фахівець з фінансового обліку отримує інформацію про новий або змінений страховий поліс майна.
2.	Він вводить цю інформацію в інформаційну систему компанії.
3.	Система автоматично оновлює фінансовий облік полісу та робить відповідні зміни в базі даних.
Роширення	1)	Користувач спробував увести дані банківської картки у систему для оплати страхового полісу.
•	Система виявляє, що введені дані банківської картки не відповідають формату чи мають помилки.
•	Система відображає користувачу повідомлення про помилку та просить перевірити та ввести дані картки знову.
2)	Після виправлення даних картки користувач повторно вводить їх у систему та відправляє на опрацювання.
•	Система успішно приймає дані картки та реєструє оплату страхового полісу.
3)	Система автоматично генерує електронний квитанцію про успішну оплату та надсилає його на електронну пошту користувача.
4)	У випадку невдачі оплати через інші причини (наприклад, недостатньо коштів на рахунку), система відображає повідомлення про відмову у оплаті та надає користувачу інструкції щодо вирішення проблеми або альтернативних методів оплати.

Список змін в технології і в даних	Оновлення програмного забезпечення, додавання нових полісних продуктів, зміни в законодавстві.
Допоміжна інформація	Уточнення технічних вимог щодо зберігання фінансових даних, надання доступу до інформації тільки авторизованим користувачам, реалізація механізмів резервного копіювання даних для забезпечення безпеки.

 
Діаграма прецедентів для обраних функцій:
 
Рис.1 Діаграма прецедентів функції «Управління полісами»
 
Рис.2 Діаграма прецедентів функції «Фінансовий облік полісів»

Функція: Управління полісами
	Перелік та опис класів на основі ADT:
1.	Policy(Поліс): Цей клас представляє поліс страхування майна. Він містить такі властивості як унікальний ідентифікатор полісу, інформація про клієнта, статус полісу (активний, неактивний тощо), дати початку і закінчення дії полісу, типи страхування та інші параметри.
2.	Client (Клієнт): Представляє інформацію про клієнта компанії страхування. Включає поля, такі як ID клієнта, особисті дані (ім'я, адреса, контактна інформація), історію укладених полісів тощо. 
3.	Claim (Заявка на відшкодування): Цей клас представляє заявку на відшкодування, подану клієнтом. Він містить інформацію про причину подання заявки, суму відшкодування, статус заявки (очікує на розгляд, затверджена, відхилена) та дати подання і вирішення заявки.
4.	Payment (Платіж): Клас для управління інформацією про платежі, пов'язані з полісами. Включає поля, такі як ID платежу, ID полісу, сума, дата здійснення платежу, статус платежу (успішний, неуспішний).
5.	InsuranceType (Тип страхування): Клас, що представляє різні типи страхування, доступні в компанії. Містить інформацію про назву типу страхування, опис покриття, максимальну та мінімальну суми страхування.
6.	Agent (Агент): Представляє страхового агента, що обслуговує клієнтів. Включає поля, такі як ID агента, особисті дані (ім'я, контактна інформація), список клієнтів, яких обслуговує агент.
	Функція: Фінансовий облік полісів
	Перелік та опис класів на основі ADT:
1.	Payment (Платіж): Цей клас відображає окремий платіж, пов'язаний зі страховим полісом. Включає ID, інформацію про суму платежу, дату, статус оплати та інші важливі атрибути.
2.	FinancialReport (Фінансовий Звіт): Клас, який представляє фінансовий звіт страхової компанії. Містить інформацію про доходи, витрати, прибуток від складання полісів, а також деталізацію платежів і витрат за певний період.
3.	Payment (Платіж): Клас, що відображає окремий платіж, пов'язаний зі страховим полісом. Включає ID, інформацію про суму платежу, дату, статус оплати, а також спосіб оплати (банківська карта, готівка тощо).
4.	Claim (Заява про відшкодування): Клас для обробки заяв про відшкодування від клієнтів. Включає ID заяви, пов'язаний поліс, суму відшкодування, статус розгляду, дату подання заяви та результат розгляду.
	3.2 Побудова інтерфейсів робочих класів.
	Побудова інтерфейсів робочих класів для функції управління полісами є важливим етапом розробки системи, оскільки інтерфейси визначають контракт між різними частинами коду та забезпечують можливість легкої модифікації та розширення системи у майбутньому. Вони дозволяють розробникам працювати з абстрактними представленнями даних та функціональності, не турбуючись про деталі реалізації. Це особливо корисно у великих проєктах, де різні команди можуть одночасно працювати над різними частинами системи.
	Функція: Управління полісами
	Перелік та опис інтерфейсів класів:
1)	PolicyInterface (Інтерфейс полісу):
•	getPolicyId(): Повертає унікальний ідентифікатор полісу.
•	getClientInfo(): Повертає інформацію про клієнта, пов'язану з полісом.
•	getPolicyStatus(): Повертає статус полісу (активний, неактивний тощо).
•	getPolicyDates(): Повертає дати початку і закінчення дії полісу.
•	getInsuranceType(): Повертає тип страхування, пов'язаний з полісом.
2)	ClientInterface (Інтерфейс клієнта):
•	getClientId(): Повертає унікальний ідентифікатор клієнта.
•	getPersonalDetails(): Повертає особисті дані клієнта (ім'я, адреса, контактна інформація).
•	getPolicyHistory(): Повертає історію укладених полісів клієнта.
•	getClaims(): Повертає список заявок на відшкодування, поданих клієнтом.
3)	ClaimInterface (Інтерфейс заявки на відшкодування):
•	getClaimId(): Повертає унікальний ідентифікатор заявки.
•	getClaimReason(): Повертає причину подання заявки.
•	getClaimAmount(): Повертає суму відшкодування, зазначену в заявці.
•	getClaimStatus(): Повертає статус заявки (очікує на розгляд, затверджена, відхилена).
•	getClaimDates(): Повертає дати подання і вирішення заявки.
4)	PaymentInterface (Інтерфейс платежу):
•	getPaymentId(): Повертає унікальний ідентифікатор платежу.
•	getPolicyId(): Повертає ідентифікатор полісу, з яким пов'язаний платіж.
•	getPaymentAmount(): Повертає суму платежу.
•	getPaymentDate(): Повертає дату здійснення платежу.
•	getPaymentStatus(): Повертає статус платежу (успішний, неуспішний).
5)	InsuranceTypeInterface (Інтерфейс типу страхування):
•	getTypeId(): Повертає унікальний ідентифікатор типу страхування.
•	getTypeName(): Повертає назву типу страхування.
•	getTypeDescription(): Повертає опис покриття типу страхування.
•	getCoverageLimits(): Повертає максимальну та мінімальну суми страхування.
6)	AgentInterface (Інтерфейс агента):
•	getAgentId(): Повертає унікальний ідентифікатор агента.
•	getAgentDetails(): Повертає особисті дані агента (ім'я, контактна інформація).
•	getClientList(): Повертає список клієнтів, яких обслуговує агент.
	Функція: Фінансовий облік полісів
	Перелік та опис інтерфейсів класів:
1)	PolicyFinancialRecordInterface (Інтерфейс фінансового запису полісу):
•	getRecordId(): Повертає унікальний ідентифікатор фінансового запису.
•	getPolicyId(): Повертає ідентифікатор полісу, до якого належить цей запис.
•	getAmount(): Повертає суму транзакції, пов'язаної з полісом.
•	getTransactionDate(): Повертає дату транзакції.
•	getTransactionType(): Повертає тип транзакції (платіж, відшкодування тощо).
2)	ClientAccountInterface (Інтерфейс облікового запису клієнта):
•	getClientId(): Повертає унікальний ідентифікатор клієнта.
•	getAccountBalance(): Повертає баланс облікового запису клієнта.
•	getTransactionHistory(): Повертає історію фінансових транзакцій клієнта.
•	addTransaction(): Додає нову транзакцію до облікового запису клієнта.
3)	PaymentProcessingInterface (Інтерфейс обробки платежів):
•	processPayment(): Обробляє платіж для вказаного полісу.
•	validatePayment(): Перевіряє коректність платіжної інформації.
•	refundPayment(): Повертає кошти за вказаною транзакцією.
•	getPaymentStatus(): Повертає статус платежу (успішний, неуспішний).
4)	FinancialReportInterface (Інтерфейс фінансового звіту):
•	generateReport(): Генерує фінансовий звіт за вказаний період.
•	getReportData(): Повертає дані фінансового звіту.
•	exportReport(): Експортує фінансовий звіт у зазначеному форматі (PDF, Excel тощо).
5)	InvoiceInterface (Інтерфейс рахунку-фактури):
•	createInvoice(): Створює новий рахунок-фактуру для клієнта.
•	getInvoiceDetails(): Повертає деталі рахунку-фактури.
•	sendInvoice(): Відправляє рахунок-фактуру клієнту.
•	getInvoiceStatus(): Повертає статус рахунку-фактури (оплачений, неоплачений).
6)	TaxCalculationInterface (Інтерфейс розрахунку податків):
•	calculateTax(): Розраховує податок для вказаної транзакції.
•	getTaxDetails(): Повертає деталі розрахунку податків.
•	applyTax(): Застосовує податкові ставки до транзакції.


